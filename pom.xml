<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2016 Ronald Jack Jenkins Jr.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>info.ronjenkins</groupId>
  <artifactId>smart-reactor-maven-extension</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <name>Smart Reactor Maven Extension</name>
  <description>The Maven reactor, reimagined!</description>
  <url>http://rjenkinsjr.github.io/smart-reactor-maven-extension</url>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>rjenkinsjr</id>
      <name>Ronald Jack Jenkins Jr.</name>
      <email>me@ronjenkins.info</email>
      <timezone>America/Detroit</timezone>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:rjenkinsjr/smart-reactor-maven-extension.git</connection>
    <developerConnection>scm:git:git@github.com:rjenkinsjr/smart-reactor-maven-extension.git</developerConnection>
    <url>git@github.com:rjenkinsjr/smart-reactor-maven-extension.git</url>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <plexus.version>1.5.5</plexus.version>
    <maven.surefire.version>2.19.1</maven.surefire.version>
    <maven.invoker.version>2.0.0</maven.invoker.version>
    <maven.javadoc.version>2.10.3</maven.javadoc.version>
    <jacoco.version>0.7.5.201505241946</jacoco.version>
    <jacoco.ut.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.file>
    <jacoco.it.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.file>
    <it.dest>${project.build.directory}/it</it.dest>
    <it.resources.src>${project.basedir}/src/it/resources</it.resources.src>
    <it.resources.dest>${project.build.directory}/it-resources</it.resources.dest>
    <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.jacoco.reportPath>${project.build.directory}/coverage-reports/jacoco-ut.exec</sonar.jacoco.reportPath>
    <sonar.jacoco.itReportPath>${jacoco.it.file}</sonar.jacoco.itReportPath>
    <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
    <site.src>${project.basedir}/src/site</site.src>
    <site.dest>${project.basedir}/target/site-src</site.dest>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <version>${plexus.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.release</groupId>
      <artifactId>maven-release-manager</artifactId>
      <version>2.5.3</version>
    </dependency>
    <!-- Hamcrest comes before JMockit -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <!-- JMockit comes before JUnit -->
    <dependency>
      <groupId>org.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <version>1.21</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.sonarsource.java</groupId>
      <artifactId>sonar-jacoco-listeners</artifactId>
      <version>3.9</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>clean install site</defaultGoal>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${project.basedir}</directory>
        <includes>
          <include>LICENSE</include>
          <include>THIRDPARTY</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <!-- Generates the final components.xml that handles Plexus dependencies at runtime. -->
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
        <version>${plexus.version}</version>
        <executions>
          <execution>
            <id>generate-descriptor</id>
            <!-- phase process-classes -->
            <goals>
              <goal>generate-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Executes unit tests via JUnit. -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <configuration>
          <argLine>${surefireArgLine}</argLine>
          <properties>
            <property>
              <name>listener</name>
              <value>org.sonar.java.jacoco.JUnitListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <!-- Prepares the IT environment for test execution. -->
          <execution>
            <id>copy-it-resources</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${it.resources.dest}</outputDirectory>
              <resources>
                <resource>
                  <directory>${it.resources.src}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Executes integration tests. -->
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>${maven.invoker.version}</version>
        <dependencies>
          <!-- Needed for Groovy AntBuilder. -->
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.9.6</version>
          </dependency>
          <!-- Bump Groovy version. -->
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.5</version>
          </dependency>
        </dependencies>
        <configuration>
          <localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
          <settingsFile>${it.resources.dest}/settings.xml</settingsFile>
        </configuration>
        <executions>
          <!-- Installs this Maven extension into the IT local Maven repo. -->
          <execution>
            <id>install-this-extension</id>
            <!-- phase pre-integration-test -->
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
          <!-- Executes the tests. -->
          <execution>
            <id>integration-test</id>
            <!-- phase integration-test -->
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <cloneClean>true</cloneClean>
              <cloneProjectsTo>${it.dest}</cloneProjectsTo>
              <goals>
                <goal>clean</goal>
              </goals>
              <scriptVariables>
                <itResourcesDir>${it.resources.dest}</itResourcesDir>
                <itCommonPrebuild>${it.resources.dest}/prebuild-common.groovy</itCommonPrebuild>
              </scriptVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Handles all items related to code coverage. -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <!-- Generates command-line args for Maven Surefire. -->
          <execution>
            <id>pre-unit-test</id>
            <phase>test-compile</phase><!-- Prevent re-execution during site generation. -->
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.ut.file}</destFile>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <!-- Generates command-line args for Maven Failsafe. -->
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.it.file}</destFile>
              <!-- This property is read by the Maven Invoker Plugin by default. -->
              <propertyName>invoker.mavenOpts</propertyName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Rename site files to Velocity templates. -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>preprocess-site-pages</id>
            <phase>pre-site</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${site.dest}">
                  <fileset dir="${site.src}" excludes="**/*.md" />
                </copy>
                <copy todir="${site.dest}">
                  <fileset dir="${site.src}" includes="**/*.md" />
                  <globmapper from="*.md" to="*.md.vm" />
                </copy>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Site plugin configuration. -->
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.4</version>
        <configuration>
          <!-- Use renamed site files. -->
          <siteDirectory>${site.dest}</siteDirectory>
          <!-- Don't use this plugin to deploy anything. -->
          <skipDeploy>true</skipDeploy>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <!-- Manages site/report configuration. -->
  <reporting>
    <plugins>
      <!-- Basic reports -->
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.8.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>issue-tracking</report>
              <report>mailing-list</report>
              <report>project-team</report>
              <report>dependencies</report>
              <report>dependency-management</report>
              <report>dependency-convergence</report>
              <report>plugins</report>
              <report>scm</report>
              <report>cim</report>
              <report>distribution-management</report>
              <report>summary</report>
              <report>license</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Javadocs -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Source XRef -->
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.5</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>jxr</report>
              <report>test-jxr</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- TODOs, etc. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <tagListOptions>
            <tagClasses>
              <tagClass>
                <displayName>To-dos</displayName>
                <tags>
                  <tag>
                    <matchString>TODO</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                  <tag>
                    <matchString>FIXME</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
              <tagClass>
                <displayName>Deprecations</displayName>
                <tags>
                  <tag>
                    <matchString>@deprecated</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
            </tagClasses>
          </tagListOptions>
        </configuration>
      </plugin>
      <!-- UT reports. -->
      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report-only</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- IT reports. -->
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>${maven.invoker.version}</version>
      </plugin>
      <!-- Code coverage reports. -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <reportSets>
          <!-- UT CC reports. -->
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
            <configuration>
              <dataFile>${jacoco.ut.file}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </reportSet>
          <!-- IT CC reports. -->
          <reportSet>
            <reports>
              <report>report-integration</report>
            </reports>
            <configuration>
              <dataFile>${jacoco.it.file}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <!-- Things to do only for releases. -->
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>rtr.release</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Generate source JAR. -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.4</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <!-- phase package -->
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Generate Javadoc JAR. -->
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven.javadoc.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <!-- phase package -->
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Sign all artifacts. -->
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <!-- phase verify -->
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <!-- settings.xml -->
                  <executable>gpg2</executable>
                  <defaultKeyring>false</defaultKeyring>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Push artifacts to OSSRH. -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.6</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId><!-- settings.xml -->
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
          <!-- Push Maven site to GitHub. -->
          <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.12</version>
              <executions>
                <execution>
                  <id>push-site-to-github</id>
                  <phase>site-deploy</phase>
                  <goals>
                    <goal>site</goal>
                  </goals>
                  <configuration>
                    <server>github</server><!-- settings.xml -->
                    <message>Publishing site for version ${project.version}</message>
                    <merge>true</merge>
                  </configuration>
                </execution>
              </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- m2e configuration, enabled only by the m2e IDE plugin to eliminate erroneous build warnings. -->
    <profile>
      <id>only-eclipse</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-component-metadata</artifactId>
                        <versionRange>*</versionRange>
                        <goals>
                          <goal>generate-metadata</goal>
                          <goal>merge-metadata</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore />
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-invoker-plugin</artifactId>
                        <versionRange>*</versionRange>
                        <goals>
                          <goal>install</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore />
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
